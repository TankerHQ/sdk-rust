image: registry.gitlab.com/tankerhq/ci/ci-native:latest

before_script:
 - poetry install

stages:
  - check
  - deploy

.build-from-sources:
  stage: check
  when: manual

.build-deployed:
  stage: check
  when: manual

check/linux:
  extends: .build-from-sources
  tags: [linux]
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --use-tanker=same-as-branch --profile gcc8-release

check/linux/deployed:
  extends: .build-deployed
  tags: [linux]
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --use-tanker=deployed --tanker-ref=$SDK_NATIVE_LATEST_CONAN_REFERENCE --profile gcc8-release
  artifacts:
    expire_in: 1 day
    paths:
      - native/

build/android/deployed:
  extends: .build-deployed
  tags: [linux]
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --use-tanker=deployed --tanker-ref=$SDK_NATIVE_LATEST_CONAN_REFERENCE --profile android-armv8-release-static-bundle --profile android-x86_64-release-static-bundle --profile android-x86-release-static --profile android-armv7-release-static
  artifacts:
    expire_in: 1 day
    paths:
      - native/

check/macos:
  extends: .build-from-sources
  tags: [macos]
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --use-tanker=same-as-branch --profile macos-release

check/macos/deployed:
  extends: .build-deployed
  tags: [macos]
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --use-tanker=deployed --tanker-ref=$SDK_NATIVE_LATEST_CONAN_REFERENCE --profile macos-release
  artifacts:
    expire_in: 1 day
    paths:
      - native/

build/ios/deployed:
  extends: .build-deployed
  tags: [macos]
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --use-tanker=deployed --tanker-ref=$SDK_NATIVE_LATEST_CONAN_REFERENCE --profile ios-armv8-release --profile ios-x86_64-release
  artifacts:
    expire_in: 1 day
    paths:
      - native/

deploy/all:
  stage: deploy
  tags: [linux]
  only:
    - tags
  when: manual
  script:
    - poetry run python run-ci.py deploy
  artifacts:
    expire_in: 7 day
    paths:
      - release/

mirror:
  tags:
    - linux
  stage: deploy
  only:
    # mirror public tags, releases branches
    # feature branches, and master
    - /\Av[0-9.]+\z/
    - master
    - /\Arelease/.*\z/
    - /\Afeat\/.+\z/   # feat/ branches
  except:
    - schedules
  script:
    - poetry run python run-ci.py mirror

